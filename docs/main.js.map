{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/materials/add-material/add-material.component.ts","./src/app/components/materials/add-material/add-material.component.html","./src/app/components/materials/delete-material/delete-material.component.ts","./src/app/components/materials/delete-material/delete-material.component.html","./src/app/components/materials/material-search.pipe.ts","./src/app/components/materials/materials.component.ts","./src/app/components/materials/materials.component.html","./src/app/components/projects/add-project/add-project.component.ts","./src/app/components/projects/add-project/add-project.component.html","./src/app/components/projects/project-detail/project-detail.component.ts","./src/app/components/projects/project-detail/project-detail.component.html","./src/app/components/projects/project-search.pipe.ts","./src/app/components/projects/projects.component.ts","./src/app/components/projects/projects.component.html","./src/app/components/raports/add-raport/add-raport.component.ts","./src/app/components/raports/add-raport/add-raport.component.html","./src/app/components/raports/raport-billing/raport-billing.component.ts","./src/app/components/raports/raport-billing/raport-billing.component.html","./src/app/components/raports/raport-detail/raport-detail.component.ts","./src/app/components/raports/raport-detail/raport-detail.component.html","./src/app/components/raports/raports.component.ts","./src/app/components/raports/raports.component.html","./src/app/components/requests/add-request-raport/add-request-raport.component.ts","./src/app/components/requests/add-request-raport/add-request-raport.component.html","./src/app/components/requests/add-request/add-request.component.ts","./src/app/components/requests/add-request/add-request.component.html","./src/app/components/requests/delete-request/delete-request.component.ts","./src/app/components/requests/delete-request/delete-request.component.html","./src/app/components/requests/request-item/request-item.component.ts","./src/app/components/requests/request-item/request-item.component.html","./src/app/components/requests/requests.component.ts","./src/app/components/requests/requests.component.html","./src/app/components/shared/button/button.component.ts","./src/app/components/shared/button/button.component.html","./src/app/components/shared/header/header.component.ts","./src/app/components/shared/header/header.component.html","./src/app/components/shared/security/auth.guard.ts","./src/app/routes/index.ts","./src/app/services/authentication.service.ts","./src/app/services/material.service.ts","./src/app/services/projects.service.ts","./src/app/services/raport.service.ts","./src/app/services/request.service.ts","./src/app/services/ui.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BusinessBook';\n\n  constructor(public authService: AuthenticationService, private router: Router) {\n\n  }\n\n  logout(){\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['login'])\n    })\n  }\n\n  isLoggedIn():boolean {\n    \n    return (localStorage.getItem('user') === null)? false:true;\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row> \n        <mat-icon>location_city</mat-icon>   <h1 class=\"nav-title\"> {{title}}</h1>\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\n            <ul fxLayout=\"row\" fxLayoutGap=\"20px\" *ngIf=\"isLoggedIn()\">\n               \n                <li>\n                    <button mat-button (click)=\"logout()\">\n                        <mat-icon>person_outline</mat-icon> Sign Out\n                    </button>\n                </li>\n            </ul>\n        </div>\n    </mat-toolbar-row>\n\n  </mat-toolbar>\n\n<mat-drawer-container>\n    <mat-drawer mode=\"side\" [opened]=\"true\" *ngIf=\"isLoggedIn()\">\n        <app-header></app-header>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n        \n    </mat-drawer-content>\n   \n</mat-drawer-container>\n","import { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./components/shared/header/header.component\";\nimport { ButtonComponent } from \"./components/shared/button/button.component\";\nimport { MaterialsComponent } from \"./components/materials/materials.component\";\nimport { AddMaterialComponent } from \"./components/materials/add-material/add-material.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { ProjectsComponent } from \"./components/projects/projects.component\";\nimport { RaportsComponent } from \"./components/raports/raports.component\";\nimport { RequestsComponent } from \"./components/requests/requests.component\";\nimport { ProjectDetailComponent } from \"./components/projects/project-detail/project-detail.component\";\nimport { AddProjectComponent } from \"./components/projects/add-project/add-project.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AddRaportComponent } from \"./components/raports/add-raport/add-raport.component\";\nimport { RaportDetailComponent } from \"./components/raports/raport-detail/raport-detail.component\";\nimport { AddRequestComponent } from \"./components/requests/add-request/add-request.component\";\nimport { RequestItemComponent } from \"./components/requests/request-item/request-item.component\";\nimport { RaportBillingComponent } from \"./components/raports/raport-billing/raport-billing.component\";\nimport { AddRequestRaportComponent } from \"./components/requests/add-request-raport/add-request-raport.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\n\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatBadgeModule } from \"@angular/material/badge\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport {MatDialogModule} from '@angular/material/dialog';\n\nimport { ProjectSearchPipe } from \"./components/projects/project-search.pipe\";\nimport { MaterialSearchPipe } from \"./components/materials/material-search.pipe\";\n\nimport { initializeApp, provideFirebaseApp } from \"@angular/fire/app\";\nimport { provideFirestore, getFirestore } from \"@angular/fire/firestore\";\nimport { environment } from \"../environments/environment\";\nimport { provideAuth, getAuth } from \"@angular/fire/auth\";\n\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { HotToastModule } from \"@ngneat/hot-toast\";\n\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { appRoutes } from \"../app/routes/index\";\nimport { DeleteRequestComponent } from './components/requests/delete-request/delete-request.component';\nimport { DeleteMaterialComponent } from './components/materials/delete-material/delete-material.component';\n\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ButtonComponent,\n    MaterialsComponent,\n    AddMaterialComponent,\n    HomeComponent,\n    ProjectsComponent,\n    RaportsComponent,\n    RequestsComponent,\n    ProjectDetailComponent,\n    AddProjectComponent,\n    AddRaportComponent,\n    RaportDetailComponent,\n    AddRequestComponent,\n    RequestItemComponent,\n    RaportBillingComponent,\n    AddRequestRaportComponent,\n    LoginComponent,\n    MaterialSearchPipe,\n    ProjectSearchPipe,\n    DeleteRequestComponent,\n    DeleteMaterialComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatListModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatBadgeModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n    NgbModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatSelectModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideFirestore(() => getFirestore()),\n    provideAuth(() => getAuth()),\n    HotToastModule.forRoot(),\n    MatDialogModule,\n    AngularEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Request } from \"../../interfaces/Request.interface\";\nimport { RequestService } from \"../../services/request.service\";\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n})\nexport class HomeComponent implements OnInit {\n  requests: Request[] = [];\n\n  constructor(private requestService: RequestService) {}\n\n  ngOnInit(): void {    \n    this.requestService\n      .getRequests()\n      .subscribe((requests) => (this.requests = requests as Request[]));\n  }\n}\n","<div class=\"container mat-elevation-z5\">\n    <app-requests></app-requests>\n</div>\n\n<app-request-item [requests]=requests></app-request-item>\n\n<app-raport-billing></app-raport-billing>","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"src/app/services/authentication.service\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password: new FormControl(\"\", Validators.required),\n  });\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private toast: HotToastService\n  ) {}\n\n  ngOnInit(): void {}\n\n  get email() {\n    return this.loginForm.get(\"email\");\n  }\n\n  get password() {\n    return this.loginForm.get(\"password\");\n  }\n\n  submit() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    const { email, password } = this.loginForm.value;\n \n\n    this.authService\n      .login(email, password)\n      .pipe(\n        this.toast.observe({\n          success: \"Login successful\",\n          loading: \"Email and password are checked...\",\n          error: \"Check Account Information...\",\n        })\n      )\n      .subscribe(() => {\n        this.router.navigate([\"\"]);\n      });\n  }\n}\n","<div class=\"form-container mat-elevation-z10\">\n    <h1>Portal Login</h1>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n        <mat-form-field>\n            <input matInput placeholder=\"Email\" formControlName=\"email\">\n            <mat-error *ngIf=\"email?.errors?.['required']\">\n                You need to fill this field !!!\n            </mat-error>\n            <mat-error *ngIf=\"email?.errors?.['email']\">\n                Email format did not match !!!\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput placeholder=\"Parola\" formControlName=\"password\" type=\"password\">\n            <mat-error *ngIf=\"password?.errors?.['required']\">\n                You need to fill this field !!!\n            </mat-error>\n        </mat-form-field>\n        <div class=\"center margin-top\">\n            <button mat-raised-button color=\"primary\" type=\"submit\">\n                Login\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { Material } from \"../../../interfaces/Material.interface\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n@Component({\n  selector: \"app-add-material\",\n  templateUrl: \"./add-material.component.html\",\n  styleUrls: [\"./add-material.component.css\"],\n})\nexport class AddMaterialComponent implements OnInit {\n  @Output() onAddMaterial: EventEmitter<Material> = new EventEmitter();\n  addMaterialForm: FormGroup = new FormGroup({});\n  showAddMaterial: boolean = false;\n\n  alertSucces = false;\n  alertFailed = false;\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initializeFrom();\n  }\n  initializeFrom(): void {\n    this.addMaterialForm = this.fb.group({\n      text: [\"\", Validators.required],\n      price: [\"\", Validators.required],\n      quantity: [\"\", Validators.required],\n    });\n  }\n  onSubmit() {\n    if (!this.addMaterialForm.value.text) {\n      this.alertFailed = true;\n      setTimeout(() => {\n        this.alertFailed = false;\n      }, 2000);\n      return;\n    }\n    const newMaterial = {\n      text: this.addMaterialForm.value.text,\n      price: this.addMaterialForm.value.price,\n      quantity: this.addMaterialForm.value.quantity,\n    };\n    this.onAddMaterial.emit(newMaterial);\n    //Reset error\n    this.addMaterialForm.reset();\n    for (let control in this.addMaterialForm.controls) {\n      this.addMaterialForm.controls[control].setErrors(null);\n    }\n    this.alertSucces = true;\n    setTimeout(() => {\n      this.alertSucces = false;\n    }, 2000);\n  }\n}\n","<p>\n  <ngb-alert  *ngIf=\"alertSucces\" type=\"success\" [dismissible]=false ><strong>User successfully added</strong></ngb-alert>\n  <ngb-alert  *ngIf=\"alertFailed\" type=\"danger\" [dismissible]=false ><strong>Enter User Name</strong></ngb-alert>\n</p>\n<form [formGroup]=\"addMaterialForm\" (ngSubmit)=\"onSubmit()\">\n  <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\"><p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>User Name & Surname</mat-label>\n        <input matInput formControlName=\"text\" placeholder=\"Name\">\n        <mat-error>This field is required</mat-error>\n      </mat-form-field>\n      </p><p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Statu:</mat-label>\n        <input matInput formControlName=\"price\" placeholder=\"Price\">\n        <mat-error>This field is required</mat-error>\n      </mat-form-field></p><p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Department:</mat-label>\n        <input matInput formControlName=\"quantity\" placeholder=\"Quantity\">\n        <mat-error>This field is required</mat-error>\n      </mat-form-field>\n    </p>\n \n  </div>\n  <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n  <p>\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!addMaterialForm.valid\">Add User</button>\n</p>\n</div>\n</form>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MaterialService } from \"../../../services/material.service\";\nimport { Material } from \"../../../interfaces/Material.interface\";\n\n@Component({\n  selector: \"app-delete-material\",\n  templateUrl: \"./delete-material.component.html\",\n  styleUrls: [\"./delete-material.component.css\"],\n})\nexport class DeleteMaterialComponent implements OnInit {\n  constructor(\n    private materialService: MaterialService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogMaterial\n  ) {}\n\n  ngOnInit(): void {}\n  deleteMaterialFromFirebBase(material: Material) {\n    this.materialService.deleteMaterialFromFirebBase(material);\n  }\n}\nexport interface DialogMaterial {\n  material: Material;\n}\n","<h2 mat-dialog-title><mat-icon>delete</mat-icon> Are you sure you want to delete the product?</h2>\n<mat-dialog-content class=\"mat-typography\">\n\n\n  <p>Product:</p>\n  <p class=\"red\">{{data.material.text}}</p>\n  <p>Price:</p>\n  <p class=\"red\">{{data.material.price}}</p>\n  <p>Quantity:</p>\n  <p class=\"red\">{{data.material.quantity}}</p>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button class=\"red\" mat-button mat-dialog-close (click)=deleteMaterialFromFirebBase(data.material)><mat-icon>delete</mat-icon>Delete</button>\n</mat-dialog-actions>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'materialSearch'\n})\nexport class MaterialSearchPipe implements PipeTransform {\n\n  transform(list: any[], value: string) {\n  \n\n    return value ? list.filter(item => item.text.toLowerCase().includes(value.toLowerCase())) : list;\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\n(\"@angular/core\");\nimport { MaterialService } from \"src/app/services/material.service\";\nimport { Material } from \"../../interfaces/Material.interface\";\nimport { DeleteMaterialComponent } from \"./delete-material/delete-material.component\";\nimport { MatDialog,} from \"@angular/material/dialog\";\nimport {TooltipPosition} from '@angular/material/tooltip';\n\n\n@Component({\n  selector: \"app-materials\",\n  templateUrl: \"./materials.component.html\",\n  styleUrls: [\"./materials.component.css\"],\n})\nexport class MaterialsComponent implements OnInit {\n  materialName: string = \"\";\n  materials: Material[] = [];\n  editMode = false;\n  editId = \"\";\n\n  constructor(\n    private materialService: MaterialService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.materialService.getMaterialsFromFireBase().subscribe((materials) => {\n      this.materials = materials as Material[];\n    });\n  }\n  addMaterialtoFireBase(material: Material) {\n    this.materialService.addMaterialtoFireBase(material);\n  }\n  openDialog(material: Material) {\n    this.dialog.open(DeleteMaterialComponent, {\n      data: {\n        material: material,\n      },\n    });\n  }\n\n  editMaterialFromFirebBase(material: Material) {\n    this.materialService.editMaterialFromFirebBase(material);\n  }\n\n  enterEditMode(id: string) {\n    this.editId = id;\n    this.editMode = true;\n  }\n\n  compareId(id: string, editId: string): boolean {\n    return id === editId;\n  }\n\n  exitEditMode(material: Material): void {\n    this.editMaterialFromFirebBase(material);\n    this.editMode = false;\n  \n  }\n}\n","<div class=\"container mat-elevation-z5\">\n  <app-add-material (onAddMaterial)=\"addMaterialtoFireBase($event)\"></app-add-material>\n  <mat-divider></mat-divider>\n  <form class=\"form-group margin-top\">\n\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label> <mat-icon>search</mat-icon> Search</mat-label>\n        <input matInput [(ngModel)]=\"materialName\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"ex: CABLU UTP\">\n      </mat-form-field>\n    </p>\n    <p>\n  </form>\n\n  <table class=\"table table-striped table-bordered mat-elevation-z5\">\n    <thead>\n      <tr>\n        <th scope=\"col\">User Name & Surname</th>\n        <th scope=\"col\">Statu</th>\n        <th scope=\"col\">Department</th>\n        <th scope=\"col\">Action</th>\n        \n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let material of materials | materialSearch : materialName\">\n        <td *ngIf=\"!editMode || !compareId(material.id,editId)\">{{material?.text | uppercase}}</td>\n        <td *ngIf=\"editMode && compareId(material.id,editId)\"><input class=\"green\" matInput  type=\"text\" [(ngModel)]=\"material.text\"></td>\n        <td *ngIf=\"!editMode || !compareId(material.id,editId)\" >{{material?.price}}</td>\n        <td *ngIf=\"editMode && compareId(material.id,editId)\"><input class=\"green\" matInput size=5 type=\"text\" [(ngModel)]=\"material.price\"></td>\n        <td *ngIf=\"!editMode || !compareId(material.id,editId)\" >{{material?.quantity}}</td>\n        <td *ngIf=\"editMode && compareId(material.id,editId)\"><input class=\"green\" matInput size=5 type=\"text\" [(ngModel)]=\"material.quantity\"></td>\n        <td class=\"saveEdit\">\n          <mat-icon *ngIf=\"!editMode || !compareId(material.id,editId)\" (click)=\"enterEditMode(material.id)\" class=\"green\"   matTooltip=\"Info about the action\">edit</mat-icon>\n          <mat-icon *ngIf=\"editMode && compareId(material.id,editId)\" (click)=\"exitEditMode(material)\" title=\"Kayıt Et\" class=\"green\">save</mat-icon>\n          <mat-icon (click)=\"openDialog(material)\" class=\"red\">delete</mat-icon>\n        </td>\n\n      </tr>\n      \n    </tbody>\n  </table>\n\n\n\n</div>","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { Project } from \"../../../interfaces/Project.interface\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {AngularEditorConfig} from '@kolkov/angular-editor'\n\n@Component({\n  selector: \"app-add-project\",\n  templateUrl: \"./add-project.component.html\",\n  styleUrls: [\"./add-project.component.css\"],\n})\nexport class AddProjectComponent implements OnInit {\n  @Output() onAddProject: EventEmitter<Project> = new EventEmitter();\n\n  addProjectForm: FormGroup = new FormGroup({});\n\n  statusType =[ \"done\", \"in progress\", \"offer\" ];\n  //Configuration for AngularEditorConfig\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '15rem',\n    minHeight: '5rem',\n    placeholder: 'description...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Arial',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n  };\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initializeFrom();\n  }\n\n  initializeFrom(): void {\n    this.addProjectForm = this.fb.group({\n      title: [\"\", [Validators.required, Validators.minLength(3)]],\n      client: [\"\", [Validators.required, Validators.minLength(3)]],\n      location: [\"\", [Validators.required, Validators.minLength(3)]],\n      status: [\"\", Validators.required],\n      date: [\"\", Validators.required],\n      description: [\"\", [Validators.required, Validators.minLength(3)]],\n    });\n  }\n  //We build the method to submit the project to Firebase using \n  // EventEmitter to the ProjectsComponent\n\n  onSubmit() {\n    const newProject = {\n      title: this.addProjectForm.value.title,\n      client: this.addProjectForm.value.client,\n      location: this.addProjectForm.value.location,\n      status: this.addProjectForm.value.status,\n      date: this.addProjectForm.value.date,\n      description: this.addProjectForm.value.description,\n    };\n    this.onAddProject.emit(newProject);\n\n    this.addProjectForm.reset();\n    for (let control in this.addProjectForm.controls) {\n      this.addProjectForm.controls[control].setErrors(null);\n    }\n  }\n}\n","<form [formGroup]=\"addProjectForm\" (ngSubmit)=\"onSubmit()\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Job Name</mat-label>\n        <input matInput formControlName=\"title\" placeholder=\"\">\n        <mat-error>Jon Name Invalid</mat-error>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>To Do Person</mat-label>\n        <input matInput formControlName=\"client\" placeholder=\"\">\n        <mat-error>To Do Person Invalid </mat-error>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Transaction Status</mat-label>\n        <input matInput formControlName=\"location\" placeholder=\"\">\n        <mat-error>Transaction Status Invalid</mat-error>\n      </mat-form-field>\n    </p>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Date</mat-label>\n        <input matInput type=\"date\" formControlName=\"date\" placeholder=\"\">\n        <mat-error>This field is required</mat-error>\n\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option *ngFor=\"let type of statusType\" value=\"{{type}}\">\n            {{type}}\n          </mat-option>\n\n        </mat-select>\n        <mat-error>This field is requiredr</mat-error>\n      </mat-form-field>\n    </p>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <h3>Description</h3>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <angular-editor [config]=\"config\" formControlName=\"description\"></angular-editor>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <button style=\"margin-top:20px;\" type=\"submit\" mat-raised-button color=\"primary\"\n      [disabled]=\"!addProjectForm.valid\">Saved</button>\n  </div>\n</form>\n<br><br>\n<mat-divider></mat-divider>\n<br><br>","import { Component, OnInit, Input } from '@angular/core';\nimport { Project } from '../../../interfaces/Project.interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ProjectsService } from '../../../services/projects.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: ['./project-detail.component.css'],\n})\nexport class ProjectDetailComponent implements OnInit {\n  projectDetail?: Project;\n  @Input() project?: Project;\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectService: ProjectsService,\n    private location: Location,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.getProject();\n  } \n  getProject(): void {\n    const id = String(this.route.snapshot.paramMap.get('id'));\n    this.projectService\n      .getProjects()\n      .subscribe(\n        (projects) => (this.projectDetail = projects.find((p) => p['id'] === id) as Project)\n      );\n  }\n  hasRoute(route: string) {\n    return this.router.url === route;\n  }\n  hasRouteDetail(route: string) {\n    return this.router.url !== route;\n  }\n}\n","<div *ngIf=\"hasRoute('/projects')\">\n  <div *ngIf=\"project\">\n\n\n    <div class=\"row\">\n\n      <div class=\"column\">\n        <h2 [ngStyle]=\"{color: '#3f51b5'}\">{{project?.client | uppercase}}</h2>\n        <h3 [ngStyle]=\"{color: '#3f51b5'}\"><strong>{{project?.title | uppercase}}</strong></h3>\n        <h3>Transaction Status: {{project?.location}}</h3>\n        <h3>Status: {{project?.status}}</h3>\n        <h3>Date: {{project?.date | date}}</h3>\n      </div>\n      <div class=\"column\">\n        <h3 [ngStyle]=\"{color: '#3f51b5'}\"><strong>Description:</strong></h3>\n        <p [innerHTML]=\"project?.description\"></p>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n<mat-divider></mat-divider>\n<div *ngIf=\"hasRouteDetail('/projects')\" class=\"container\">\n\n  <div *ngIf=\"projectDetail\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n      <h1 [ngStyle]=\"{color: '#3f51b5'}\">{{projectDetail?.client}}</h1>\n      <h3>{{projectDetail?.title}}</h3>\n      <h3>Transaction Status: {{projectDetail?.location}}</h3>\n      <h3>Status: {{projectDetail?.status}}</h3>\n      <h3>Date: {{projectDetail?.date}}</h3>\n    </div>\n    <mat-divider></mat-divider>\n    <div fxLayout=\"row\" fxLayoutAlign=\"left\">\n      <p [innerHTML]=\"projectDetail?.description\"></p>\n    </div>\n  </div>\n  <mat-divider></mat-divider>\n\n  <mat-card>\n    <mat-card-title [ngStyle]=\"{color: '#3f51b5'}\">Procese Verbale</mat-card-title>\n\n    <mat-card-content>\n      <app-raports [projectId]=\"projectDetail?.id\"></app-raports>\n    </mat-card-content>\n  </mat-card>\n\n\n\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'projectSearch'\n})\nexport class ProjectSearchPipe implements PipeTransform {\n\n  transform(list: any[], value: string) {\n  \n\n    return value ? list.filter(item => item.client.toLowerCase().includes(value.toLowerCase())) : list;\n  }\n\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Project } from \"../../interfaces/Project.interface\";\nimport { ProjectsService } from \"../../services/projects.service\";\n\n@Component({\n  selector: \"app-projects\",\n  templateUrl: \"./projects.component.html\",\n  styleUrls: [\"./projects.component.css\"],\n})\nexport class ProjectsComponent implements OnInit {\n  projectName = \"\";\n  projects: Project[] = [];\n\n  constructor(private projectService: ProjectsService) {}\n\n  ngOnInit(): void {\n    this.projectService\n      .getProjects()\n      .subscribe((projects) => (this.projects = projects as Project[]));\n  }\n  //Will get the \"project\" from the EventEmitter in AddProjectComponent\n  addProject(project: Project) {\n    this.projectService.addProject(project);\n  }\n}\n","<div class=\"container mat-elevation-z5\">\n  <h2 [ngStyle]=\"{color: '#3f51b5'}\" >Add Job</h2>\n  <app-add-project (onAddProject)=\"addProject($event)\"></app-add-project>\n  <form class=\"form-group margin-top\">\n \n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Search<mat-icon>search</mat-icon></mat-label>\n        <input matInput [(ngModel)]=\"projectName\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"ex: Nume Client\">\n      </mat-form-field>\n      </p><p>\n  </form>\n  <h2 [ngStyle]=\"{color: '#3f51b5'}\" >Detailed Business Process</h2>\n\n  <div *ngFor=\"let project of projects | projectSearch: projectName\" class=\"container mat-elevation-z5\">\n\n    <a routerLink=\"/project/{{project?.id}}\">\n      <app-project-detail [project]=\"project\"></app-project-detail>\n    </a>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { Raport } from \"../../../interfaces/Raport.interface\";\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from \"@angular/forms\";\nimport { MaterialService } from \"src/app/services/material.service\";\nimport { Material } from \"../../../interfaces/Material.interface\";\nimport { ProjectsService } from \"../../../services/projects.service\";\nimport { Project } from \"../../../interfaces/Project.interface\";\nimport { AngularEditorConfig} from \"@kolkov/angular-editor\";\n\n@Component({\n  selector: \"app-add-raport\",\n  templateUrl: \"./add-raport.component.html\",\n  styleUrls: [\"./add-raport.component.css\"],\n})\nexport class AddRaportComponent implements OnInit {\n  @Input() projectId?: string;\n\n  @Output() onAddRaport: EventEmitter<Raport> = new EventEmitter();\n\n  addRaportForm: FormGroup = new FormGroup({});\n  materialsParsed: Material[] = [];\n  projects?: Project[];\n  projectClient: string = \"\";\n  team = \"\";\n  materials?: string[];\n  material = \"\";\n  materialsFiltered: Material[] = [];\n  clonedMaterials: Material[] = [];\n  // Config for AngularEditorConfig\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: \"15rem\",\n    minHeight: \"5rem\",\n    placeholder: \"Description...\",\n    translate: \"no\",\n    defaultParagraphSeparator: \"p\",\n    defaultFontName: \"Arial\",\n    toolbarHiddenButtons: [[\"bold\"]],\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private materialService: MaterialService,\n    private projectsService: ProjectsService\n  ) {}\n\n  ngOnInit(): void {\n    this.getMaterials();\n    this.getProjectAndClient();\n    this.initializeForm();\n    //Get the text from the materials (the name of the material for the select in html)\n    this.materialService.getMaterialsFromFireBase().subscribe((materials) => {\n      let mat = materials;\n      this.materials = mat.map((el) => `${el[\"text\"]}`);\n    });\n  }\n\n  initializeForm(): void {\n    this.addRaportForm = this.fb.group({\n      projectAndClient: \"\",\n      date: [\"\", Validators.required],\n      team: [\"\", [Validators.required, Validators.minLength(3)]],\n      materialsUsed: [],\n      description: [\"\", [Validators.required, Validators.minLength(3)]],\n    });\n  }\n\n  onSubmit() {\n    const newRaport = {\n      projectAndClient: this.projectClient,\n      date: this.addRaportForm.value.date,\n      team: this.addRaportForm.value.team,\n      materialsUsed: this.addRaportForm.value.materialsUsed,\n      materialsQuantity: this.materialsFiltered,\n      description: this.addRaportForm.value.description,\n      projectId: this.projectId,\n      bill: false,\n    };\n\n    this.getAllMaterialsQuantity(this.materialsFiltered);\n\n    this.onAddRaport.emit(newRaport);\n    this.addRaportForm.reset();\n    for (let control in this.addRaportForm.controls) {\n      this.addRaportForm.controls[control].setErrors(null);\n    }\n  }\n  // Gets as args the old material and the new one ,\n  //The service's method will make the math and update in Firebase\n\n  updateMaterials(material: Material, newMaterial: Material): void {\n    this.materialService.updateMaterialFromFirebase(material, newMaterial);\n  }\n\n\n//Get all the materials from firebase\n  getMaterials() {\n    this.materialService\n      .getMaterialsFromFireBase()\n      .subscribe(\n        (materials) => (this.materialsParsed = materials as Material[])\n      );\n  }\n//This method is used to get the project and the client \n//The id of the project will come from the @Input projectId;\n//This will be added in the raport \n  getProjectAndClient() {\n    this.projectsService.getProjects().subscribe((projects) => {\n      this.projects = projects.filter((project) => {\n        project[\"id\"] === this.projectId;\n      }) as Project[];\n      this.projectClient = `${projects[0][\"client\"]} : ${projects[0][\"title\"]}`;\n    });\n  }\n//This method will use the materialsFiltered as arg\n// And compares the ids of the \"old material\" and \"new material\" (to update quantities)\n// Will call this.updateMaterials with these 2 args\n\n  getAllMaterialsQuantity(old: Material[]) {\n \n    for (let i = 0; i < old.length; i++) {\n      for (let j = 0; j < this.clonedMaterials.length; j++) {\n        if (this.materialsFiltered[i].id === this.clonedMaterials[j].id) {\n          this.updateMaterials(\n            this.clonedMaterials[j],\n            this.materialsFiltered[i]\n          );\n        }\n      }\n    }\n  }\n\n//This method is making a clone of the materials we get from firebase \n// The clone is not a reference to the same object , is a reference \n// To a new object that is the same as materialsParsed\n\n// After that is filtering the materials and populate materialsFiltered\n// with the materials we pick in the form .\n\n  filterMaterials() {\n    this.clonedMaterials = this.materialsParsed.map((obj) => {\n      return { ...obj };\n    });\n    this.materialsParsed.forEach((material) => {\n      if (this.addRaportForm.value.materialsUsed.includes(material.text)) {\n        this.materialsFiltered.push(material);\n      }\n    });\n  }\n}\n","\n<form [formGroup]=\"addRaportForm\" (ngSubmit)=\"onSubmit()\">\n \n  <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Date:</mat-label>\n        <input matInput type=\"date\" formControlName=\"date\" placeholder=\"\">\n        <mat-error>This field is required</mat-error>\n      </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Team:</mat-label>\n          <input matInput type=\"text\" formControlName=\"team\" placeholder=\"\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        </p>\n    \n          <p>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>User:</mat-label>\n              <mat-select  formControlName=\"materialsUsed\" multiple>\n                <mat-option *ngFor=\"let material of materials\" value=\"{{material}}\">{{material}}</mat-option>\n              </mat-select>\n         \n              <!-- <input matInput type=\"select\" formControlName=\"date\" placeholder=\"\"> -->\n            </mat-form-field>\n            </p>\n  </div>\n  <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n\n      <angular-editor [config]=\"config\" formControlName=\"description\" ></angular-editor>\n  \n \n</div>\n  \n  \n  \n    <input type=\"button\" value=\"Job is Add Note\" class=\"form-control\" (click)=\"filterMaterials()\">\n    \n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\n   <div  *ngFor=\"let matItem of materialsFiltered\">\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{matItem.text}}</mat-label>\n        <input matInput type=\"number\" name=\"{{matItem.text}}\" [(ngModel)]=\"matItem.quantity\"  [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n      </p>\n    \n   </div>\n  </div>\n    <input type=\"submit\" value=\"Save\" class=\"form-control\" [disabled]=\"!addRaportForm.valid\">\n  ","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { Raport } from \"../../../interfaces/Raport.interface\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { RaportService } from \"src/app/services/raport.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-raport-billing\",\n  templateUrl: \"./raport-billing.component.html\",\n  styleUrls: [\"./raport-billing.component.css\"],\n})\nexport class RaportBillingComponent implements OnInit {\n  raportDetail: Raport[] = []\n  numberLeft?: number;\n  @Input() projectId?: string;\n  @Output() onClick: EventEmitter<Raport> = new EventEmitter();\n\n  constructor(\n    private route: ActivatedRoute,\n    private raportService: RaportService\n  ) {}\n\n  ngOnInit(): void {\n    this.getRaport();\n\n  }\n\n  getRaport(): void {\n    this.raportService.getRaports().subscribe((raports) => {\n      this.raportDetail = raports as Raport[];\n    });\n  }\n  getNumber(): void {\n    this.numberLeft = this.raportDetail.length\n  }\n\n  markAsFinsihed(raport: Raport): void {\n    this.onClick.emit(raport)\n    this.raportService.updateRaport(raport)\n  \n  }\n}\n","\n<div class=\"container mat-elevation-z5\">\n    <h2 [ngStyle]=\"{color: '#3f51b5'}\" >Invoices</h2>\n    <div *ngIf=\"raportDetail\" >\n        <div *ngFor=\"let raportDetail of raportDetail\">\n            <div *ngIf=\"!raportDetail.bill\">\n                <mat-accordion class=\"example-headers-align\">   \n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                               <p>{{raportDetail?.projectAndClient | uppercase}}</p>\n                            </mat-panel-title>\n                            <mat-panel-description>\n                                <span><em>{{raportDetail?.date | date}}</em></span>                          \n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n                        <strong>Description</strong>\n                        <p innerHTML=\"{{raportDetail?.description}}\"></p>\n                        <strong>User:</strong>\n                        <ul>\n                            <li *ngFor=\"let material of raportDetail?.materialsQuantity\">+ : {{material.quantity}}</li>\n                          </ul>\n                          <mat-action-row>\n                            <button mat-button color=\"primary\" (click)=\"markAsFinsihed(raportDetail)\"> <mat-icon>delete</mat-icon> Delete</button>\n                          </mat-action-row>\n                    </mat-expansion-panel>\n            <mat-divider></mat-divider>\n        \n\n\n    \n\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Raport } from \"../../../interfaces/Raport.interface\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { RaportService } from \"src/app/services/raport.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-raport-detail\",\n  templateUrl: \"./raport-detail.component.html\",\n  styleUrls: [\"./raport-detail.component.css\"],\n})\nexport class RaportDetailComponent implements OnInit {\n  raportDetail: Raport[] =[]\n  @Input() projectId?: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private raportService: RaportService\n  ) {}\n\n  ngOnInit(): void {\n    this.getRaport();\n\n  }\n\n  getRaport(): void {\n    this.raportService.getRaports().subscribe((raports) => {\n      this.raportDetail = raports.filter(\n        (r) => r[\"projectId\"] === this.projectId\n      ) as Raport[];\n    });\n  }\n}\n"," <div *ngIf=\"raportDetail\">\n  <div *ngFor=\"let raportDetail of raportDetail\">\n    <mat-card>\n      <mat-card-title [ngStyle]=\"{color: '#3f51b5'}\" >{{raportDetail.date | date}}\n      </mat-card-title>\n      <mat-card-subtitle>\n       Team : {{raportDetail.team}}\n      </mat-card-subtitle>\n      <mat-card-content>\n        <div class=\"row\">\n          <div class=\"column\">\n            <h3><strong>User:</strong></h3>\n            <ul>\n              <li *ngFor=\"let material of raportDetail?.materialsQuantity\">{{material.text}} : {{material.quantity}}m</li>\n            </ul>\n            <span>Status: </span>\n            <span *ngIf=\"raportDetail.bill\" [ngStyle]=\"{color: 'green'}\">checked</span>\n            <span *ngIf=\"!raportDetail.bill\" [ngStyle]=\"{color: 'red'}\">billing</span>\n          </div>\n          <div class=\"column\">\n            <h3 [ngStyle]=\"{color: '#3f51b5'}\">Description</h3>\n            <p innerHTML=\"{{raportDetail?.description}}\"></p>\n          </div>\n        </div>\n      </mat-card-content>    \n    </mat-card>\n    <mat-divider [inset]=\"true\"></mat-divider>\n  <br><br>\n  </div>\n</div> \n\n","import { Component, OnInit, Output, EventEmitter  , Input } from '@angular/core';\nimport { Raport } from '../../interfaces/Raport.interface';\nimport { RaportService } from '../../services/raport.service';\n@Component({\n  selector: 'app-raports',\n  templateUrl: './raports.component.html',\n  styleUrls: ['./raports.component.css'],\n})\nexport class RaportsComponent implements OnInit {\n  @Input() projectId?: string ;\n\n\n  raports: Raport[] = [];\n\n  projects?: string[];\n  projectClient: string = '';\n  team = '';\n  materials?: string[];\n  material = '';\n  constructor(\n    private raportService: RaportService\n  ) {}\n\n  ngOnInit(): void {\n    this.raportService\n      .getRaports()\n      .subscribe((raports) => (this.raports = raports as Raport[]) );\n  }\n  addRaport(raport: Raport) {\n    this.raportService\n      .addRaport(raport)\n  }\n}\n","<app-add-raport [projectId]=projectId (onAddRaport)=\"addRaport($event)\" ></app-add-raport>\n\n<app-raport-detail [projectId]=\"projectId\"></app-raport-detail>\n\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { Raport } from \"../../../interfaces/Raport.interface\";\nimport { FormGroup, FormBuilder, FormControl, FormArray, Validators } from \"@angular/forms\";\nimport { MaterialService } from \"src/app/services/material.service\";\nimport { Material } from \"../../../interfaces/Material.interface\";\nimport { RequestService } from '../../../services/request.service';\nimport {Request} from '../../../interfaces/Request.interface';\nimport {AngularEditorConfig} from '@kolkov/angular-editor'\n\n@Component({\n  selector: 'app-add-request-raport',\n  templateUrl: './add-request-raport.component.html',\n  styleUrls: ['./add-request-raport.component.css']\n})\nexport class AddRequestRaportComponent implements OnInit {\n  @Input() requestId?: string;\n\n  @Output() onAddRaportRequest: EventEmitter<Raport> = new EventEmitter();\n\n\n  addRaportRequestForm: FormGroup = new FormGroup({});\n  materialsParsed: Material[] = [];\n  requests?: Request[] ;\n  projectClient?: string;\n  team = \"\";\n  materials?: string[];\n  material = \"\";\n  materialsFiltered: Material[] = [];\n  clonedMaterials: Material[] = [];\n\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '15rem',\n    minHeight: '5rem',\n    placeholder: 'Descriere...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Arial',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private materialService: MaterialService,\n    private requestService: RequestService\n  ) {}\n\n \n  ngOnInit(): void {\n \n    this.getMaterials();\n    this.getClient();\n    this.initializeForm();\n    this.materialService.getMaterialsFromFireBase().subscribe((materials) => {\n      let mat = materials;\n      this.materials = mat.map((el) => `${el[\"text\"]}`);\n    });\n  }\n\n  initializeForm(): void {\n    this.addRaportRequestForm = this.fb.group({\n      date: [\"\", Validators.required],\n      team: [\"\", Validators.required],\n      materialsUsed: [],\n      description: \"\"\n    });\n  }\n\n  onSubmit() {\n \n    const newRaport = {\n      projectAndClient: this.projectClient,\n      date: this.addRaportRequestForm.value.date,\n      team: this.addRaportRequestForm.value.team,\n      materialsUsed: this.addRaportRequestForm.value.materialsUsed,\n      materialsQuantity: this.materialsFiltered,\n      description: this.addRaportRequestForm.value.description,\n      requestId: this.requestId,\n      bill: false\n    };\n\n    this.getAllMaterialsQuantity(this.materialsFiltered);\n\n    this.onAddRaportRequest.emit(newRaport);\n    this.addRaportRequestForm.reset();\n    for (let control in this.addRaportRequestForm.controls) {\n      this.addRaportRequestForm.controls[control].setErrors(null);\n    }\n  }\n\n  updateMaterials(material: Material, newMaterial: Material): void {\n    this.materialService.updateMaterialFromFirebase(material,newMaterial)\n  }\n\n  reloadPage() {\n    window.location.reload();\n }\n\n  getMaterials() {\n    this.materialService\n      .getMaterialsFromFireBase()\n      .subscribe((materials) => (this.materialsParsed = materials as Material[]));\n  }\n\n  getClient() {\n    this.requestService.getRequests().subscribe((requests)=> {\n      let request = requests.find((r)=> r[\"id\"] === this.requestId)\n     this.projectClient = request?.[\"client\"]\n      \n\n\n\n    })\n  }\n\n  getAllMaterialsQuantity(old: Material[]) {\n    for (let i = 0; i < old.length; i++) {\n      \n      for (let j = 0; j < this.clonedMaterials.length; j++) {\n       \n        if (this.materialsFiltered[i].id === this.clonedMaterials[j].id) {\n          this.updateMaterials(\n            this.clonedMaterials[j],\n            this.materialsFiltered[i]\n          );\n        }\n      }\n    }\n  }\n\n  filterMaterials() {\n    this.clonedMaterials = this.materialsParsed.map((obj) => {\n      return { ...obj };\n    });\n    this.materialsParsed.forEach((material) => {\n      if (this.addRaportRequestForm.value.materialsUsed.includes(material.text)) {\n        this.materialsFiltered.push(material);\n      }\n    });\n  }\n}\n","\n<form [formGroup]=\"addRaportRequestForm\" (ngSubmit)=\"onSubmit()\">\n \n  <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Date:</mat-label>\n        <input matInput type=\"date\" formControlName=\"date\" placeholder=\"\" required>\n      </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Team:</mat-label>\n          <input matInput type=\"text\" formControlName=\"team\" placeholder=\"\" required>\n        </mat-form-field>\n        </p>\n          <p>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>User</mat-label>\n              <mat-select  formControlName=\"materialsUsed\" multiple>\n                <mat-option *ngFor=\"let material of materials\" value=\"{{material}}\">{{material}}</mat-option>\n              </mat-select>\n              <input matInput type=\"select\" formControlName=\"date\" placeholder=\"\">\n            </mat-form-field>\n            </p>\n  </div>\n  <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n\n    <angular-editor [config]=\"config\" formControlName=\"description\"  ></angular-editor>\n\n\n</div>\n\n \n\n  \n  \n  \n    <input type=\"button\" value=\"Additional Note\" class=\"form-control\" (click)=\"filterMaterials()\">\n    \n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\n   <div  *ngFor=\"let matItem of materialsFiltered\">\n    <p>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{matItem.text}}</mat-label>\n        <input matInput type=\"search\" name=\"{{matItem.text}}\" [(ngModel)]=\"matItem.quantity\"  [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n      </p>\n    \n   </div>\n  </div>\n    <button type=\"submit\" class=\"form-control\" [disabled]=\"!addRaportRequestForm.valid\">Save</button>\n  \n  </form>","import { Component, OnInit, Output , EventEmitter} from '@angular/core';\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport {Request} from '../../../interfaces/Request.interface';\n\n@Component({\n  selector: 'app-add-request',\n  templateUrl: './add-request.component.html',\n  styleUrls: ['./add-request.component.css']\n})\nexport class AddRequestComponent implements OnInit {\n\n  @Output() onAddRequest: EventEmitter<Request> = new EventEmitter();\n  \n  addRequestForm: FormGroup = new FormGroup({});\n\n  constructor(private fb: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n  initializeForm(): void {\n    this.addRequestForm = this.fb.group({\n      client:['', [Validators.required, Validators.minLength(3)]],\n      address:['', [Validators.required, Validators.minLength(3)]],\n      date:['', [Validators.required, Validators.minLength(3)]],\n      problem:['', [Validators.required, Validators.minLength(3)]],\n    });\n  }\n  onSubmit(){\n    const newRequest = {\n      client: this.addRequestForm.value.client,\n      address: this.addRequestForm.value.address,\n      date: this.addRequestForm.value.date,\n      problem: this.addRequestForm.value.problem,\n    };\n    this.onAddRequest.emit(newRequest); \n    this.addRequestForm.reset();\n    for (let control in this.addRequestForm.controls) {\n      this.addRequestForm.controls[control].setErrors(null); \n    }\n  }\n}\n","<h2 [ngStyle]=\"{color: '#3f51b5'}\">Add Job Panel</h2>\n<form [formGroup]=\"addRequestForm\" (ngSubmit)=\"onSubmit()\" >\n    <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>To Do Person</mat-label>\n            <input matInput formControlName=\"client\" placeholder=\"\">\n            <mat-error>To Do Person invalid</mat-error>\n          </mat-form-field>\n          </p><p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Job Creator:</mat-label>\n            <input matInput formControlName=\"address\" placeholder=\"\">\n            <mat-error>Job Creator invalid</mat-error>\n          </mat-form-field></p><p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput type=\"date\" formControlName=\"date\" placeholder=\"\">\n            <mat-error>Date invalid</mat-error>\n          </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Jobs</mat-label>\n              <input matInput type=\"text\" formControlName=\"problem\" placeholder=\"\">\n              <mat-error>Jobs invalid</mat-error>\n            </mat-form-field>\n          </p>\n     \n      </div>\n\n      <div  fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!addRequestForm.valid\">Save</button>\n  \n    </div>\n</form>","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { RequestService } from \"../../../services/request.service\";\nimport { Request } from \"../../../interfaces/Request.interface\";\nimport {  MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-delete-request',\n  templateUrl: './delete-request.component.html',\n  styleUrls: ['./delete-request.component.css']\n})\n\nexport class DeleteRequestComponent implements OnInit {\n\n  constructor(private requestService: RequestService,@Inject(MAT_DIALOG_DATA)  public data: DialogRequest) { }\n\n  ngOnInit(): void {\n  }\n  deleteRequest(request: Request): void {\n    this.requestService.deleteRequest(request);\n  }\n}\nexport interface DialogRequest {\n  request: Request;\n}","\n<h2 mat-dialog-title>Are you sure you want to delete the job?</h2>\n<mat-dialog-content class=\"mat-typography\">\n  \n \n  <p>To Do Person:</p>\n  <p style=\"color:red\">{{data.request.client}}</p>\n  <p>Job Creator:</p>\n  <p style=\"color:red\">{{data.request.problem}}</p>\n    <p>Date:</p>\n  <p style=\"color:red\">{{data.request.date}}</p>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n<button mat-button  mat-dialog-close>Cancel</button>\n  <button mat-button mat-dialog-close  (click)=deleteRequest(data.request) style=\"color:red\">   <mat-icon>delete</mat-icon> Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { Request } from \"../../../interfaces/Request.interface\";\nimport { faMinusSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { RequestService } from \"../../../services/request.service\";\nimport { RaportService } from \"src/app/services/raport.service\";\nimport { Raport } from \"../../../interfaces/Raport.interface\";\nimport { MatDialog , MAT_DIALOG_DATA} from \"@angular/material/dialog\";\nimport { DeleteRequestComponent } from \"../delete-request/delete-request.component\";\n\n@Component({\n  selector: \"app-request-item\",\n  templateUrl: \"./request-item.component.html\",\n  styleUrls: [\"./request-item.component.css\"],\n})\nexport class RequestItemComponent implements OnInit {\n  faMinusSquare = faMinusSquare;\n\n  requestItem?: Request;\n  raports: Raport[] = [];\n\n  @Input() requests?: Request[];\n  @Output() onDelete: EventEmitter<Request> = new EventEmitter();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private requestService: RequestService,\n    private raportService: RaportService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.getRequest();\n    this.raportService\n      .getRaports()\n      .subscribe((raports) => (this.raports = raports as Raport[]));\n  }\n\n  openDialog(request: Request) {\n   this.dialog.open(DeleteRequestComponent, {\n      data: {\n        request: request,\n      },\n    });\n  \n  \n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n\n  getRequest(): void {\n    const id = String(this.route.snapshot.paramMap.get(\"id\"));\n    this.requestService\n      .getRequests()\n      .subscribe(\n        (requests) =>\n          (this.requestItem = requests.find((p) => p[\"id\"] === id) as Request)\n      );\n  }\n  addRaport(raport: Raport) {\n    this.raportService.addRaport(raport);\n  }\n\n  hasRoute(route: string) {\n    return this.router.url === route;\n  }\n  hasRouteDetail(route: string) {\n    return this.router.url !== route;\n  }\n}\n","<div *ngIf=\"hasRoute('/')\">\n<div class=\"container mat-elevation-z5\">\n  \n  <h2 [ngStyle]=\"{color: '#3f51b5'}\">Add Job and Person to Perform the Job.</h2>\n  \n  <table class=\"table table-bordered table-striped mat-elevation-z5\">\n    <thead>\n      <tr>\n        <th scope=\"col\">To Do Person</th>\n        <th scope=\"col\">Job Creator</th>\n        <th scope=\"col\">Date</th>\n        <th scope=\"col\">Job</th>\n        <th scope=\"col\">Process</th>\n        <th scope=\"col\">Aksiyon</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let request of requests\" >\n        <td >{{request?.client}}</td>\n        <td>{{request?.address}}</td>\n        <td>{{request?.date | date}} </td>\n        <td>{{request?.problem}}</td>\n        <td ><a routerLink=\"/requests/{{request.id}}\">Process</a></td>\n        <td style=\"text-align:center\"> <mat-icon (click)=\"openDialog(request)\" [ngStyle]=\"{'color': 'red'}\" >delete</mat-icon></td>\n          \n          \n        </tr>\n      </tbody>\n    </table>  \n    \n  </div>\n    \n</div>\n\n<div *ngIf=\"hasRouteDetail('/')\">\n\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">To Do Person</th>\n        <th scope=\"col\">Job Creator</th>\n        <th scope=\"col\">Date</th>\n        <th scope=\"col\">Jobs</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n      <td>{{requestItem?.client}}</td>\n      <td>{{requestItem?.address}}</td>\n      <td>{{requestItem?.date}}</td>\n      <td>{{requestItem?.problem}}</td>\n     \n      \n  </tr>\n    </tbody>\n  </table>  \n<app-add-request-raport [requestId]=\"requestItem?.id\" (onAddRaportRequest)=\"addRaport($event)\"></app-add-request-raport>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {Request} from '../../interfaces/Request.interface';\nimport {RequestService} from '../../services/request.service'\n\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.css']\n})\nexport class RequestsComponent implements OnInit {\n  @Input() receivedRequests?: Request[];\n  requests: Request[] = [];\n\n  constructor(private requestService: RequestService) { }\n\n  ngOnInit(): void {\n    this.requestService.getRequests().subscribe((requests)=> (this.requests = requests as Request[]));\n  \n    \n  }\n\n  addRequest(request: Request) {\n    this.requestService\n      .addRequest(request)\n  }\n}\n","\n<app-add-request (onAddRequest)=\"addRequest($event)\"></app-add-request>","import { Component, OnInit, Input , Output ,EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() text: string ='';\n  @Input() color: string = '';\n  @Output() btnClick: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n    onClick() {\n      this.btnClick.emit();\n    }\n}\n","<button [ngStyle]=\"{'background-color': color}\" class=\"btn\" (click)=\"onClick()\">{{text}}</button>\n","import { Component, OnInit } from '@angular/core';\nimport { UiService } from '../../../services/ui.service';\nimport { Subscription } from 'rxjs';\nimport { Raport } from \"../../../interfaces/Raport.interface\";\nimport { RaportService } from \"src/app/services/raport.service\";\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  title: string = 'BusinessBook';\n  showAddMaterial: boolean = false;\n  subscription?: Subscription;\n  raportDetail: Raport[] = []\n  dateVal  =new Date();\n\n  constructor(private uiService: UiService, public authService: AuthenticationService, private router: Router,  private raportService: RaportService) {\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddMaterial = value);\n  }\n\n  ngOnInit(): void {\n    this.getRaport();\n\n  }\n\n  toggleAddMaterial() {\n    this.uiService.toggleAddMaterial();\n  }\n  getRaport(): void {\n    this.raportService.getRaports().subscribe((raports) => {\n      this.raportDetail = raports.filter((raport)=> raport['bill'] === false) as Raport[]\n    });\n  }\n\n  logout(){\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['login'])\n    })\n  }\n\n  isLoggedIn():boolean {\n    \n    return (localStorage.getItem('user') === null)? false:true;\n  }\n}\n","\n\n<mat-nav-list>\n\n  <h2 style=\"color: rgb(63 81 181); text-align: center; margin-left:20%\" matSubheader>{{ dateVal | date: 'shortDate' }}</h2>\n  <mat-divider></mat-divider>\n  <a mat-list-item  routerLink=\"\"> All Transactions</a>\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"materials\">User</a>\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"projects\">Works</a>\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"billing\" ><span matBadge=\"{{raportDetail.length}}\" matBadgeOverlap=\"false\">Invoices</span></a>\n  <mat-divider></mat-divider>\n  <!-- <mat-divider></mat-divider> -->\n  <button mat-button (click)=\"logout()\" class=\"SignOut\">\n    <mat-icon>person_outline</mat-icon> Sign Out\n</button>\n\n\n\n</mat-nav-list>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthenticationService } from \"src/app/services/authentication.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let isLoggedIn = localStorage.getItem('user');\n    if(isLoggedIn == undefined ) {\n      this.router.navigate(['login'])\n      return false\n\n    }\n\n    return true;\n  }\n}\n","import { Routes } from \"@angular/router\";\nimport { HomeComponent } from \"../components/home/home.component\";\nimport { LoginComponent } from \"../components/login/login.component\";\nimport { MaterialsComponent } from \"../components/materials/materials.component\";\nimport { ProjectDetailComponent } from \"../components/projects/project-detail/project-detail.component\";\nimport { ProjectsComponent } from \"../components/projects/projects.component\";\nimport { RaportBillingComponent } from \"../components/raports/raport-billing/raport-billing.component\";\nimport { RequestItemComponent } from \"../components/requests/request-item/request-item.component\";\nimport { RequestsComponent } from \"../components/requests/requests.component\";\nimport { AuthGuard } from \"../components/shared/security/auth.guard\";\n\n\nexport const appRoutes: Routes = [\n  { path: \"\", component: HomeComponent, canActivate: [AuthGuard] },\n  { path: \"login\", component: LoginComponent },\n  { path: \"materials\", component: MaterialsComponent , canActivate: [AuthGuard]  },\n  { path: \"projects\", component: ProjectsComponent, canActivate: [AuthGuard]  },\n  { path: \"requests\", component: RequestsComponent, canActivate: [AuthGuard]  },\n  { path: \"project/:id\", component: ProjectDetailComponent ,canActivate: [AuthGuard]  },\n  { path: \"requests/:id\", component: RequestItemComponent, canActivate: [AuthGuard]  },\n  { path: \"billing\", component: RaportBillingComponent ,canActivate: [AuthGuard] },\n];\n","import { Injectable } from \"@angular/core\";\nimport { Auth } from \"@angular/fire/auth\";\nimport { signInWithEmailAndPassword, User } from \"firebase/auth\";\nimport { from } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthenticationService {\n  constructor(private auth: Auth) {}\n\n  login(username: string, password: string) {\n    return from(signInWithEmailAndPassword(this.auth, username, password).then((result) => {\n      localStorage.setItem('user',JSON.stringify(this.auth.currentUser))\n    }));\n  }\n\n  logout() {\n    return from(this.auth.signOut().then((result)=>{\n      localStorage.removeItem('user')\n    }));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { Material } from \"../interfaces/Material.interface\";\n\nimport {\n  collection,collectionData,Firestore,DocumentData,docData,doc,addDoc,deleteDoc,updateDoc,} from \"@angular/fire/firestore\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\",\n  }),\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MaterialService {\n\n  constructor(private http: HttpClient, private firestore: Firestore) {}\n  \n  getMaterialsFromFireBase(): Observable<DocumentData[]> {\n    const materialRef = collection(this.firestore, \"materials\");\n    return collectionData(materialRef, { idField: \"id\" });\n  }\n  getMaterialFromFireBase(id: string): Observable<DocumentData> {\n    const materialDocRef = doc(this.firestore, `materials/${id}`);\n    return docData(materialDocRef, { idField: \"id\" });\n  }\n  addMaterialtoFireBase(materialParam: Material) {\n    const materialRef = collection(this.firestore, \"materials\");\n    return addDoc(materialRef, materialParam);\n  }\n  \n  deleteMaterialFromFirebBase(material: Material) {\n    const materialDocRef = doc(this.firestore, `materials/${material.id}`);\n    return deleteDoc(materialDocRef)\n  }\n\n    updateMaterialFromFirebase(material:Material,newMaterial: Material) {\n      \n      const materialDocRef = doc(this.firestore, `materials/${material.id}`);\n      return updateDoc(materialDocRef, { quantity: material.quantity - newMaterial.quantity});\n    }\n\n    editMaterialFromFirebBase(material:Material) {\n      const materialDocRef = doc(this.firestore, `materials/${material.id}`);\n      return updateDoc(materialDocRef, { text:material.text ,quantity: material.quantity, price: material.price})\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from '../interfaces/Project.interface';\nimport { addDoc, collection, collectionData, DocumentData, Firestore } from '@angular/fire/firestore';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsService {\n\n  constructor(private http: HttpClient, private firestore: Firestore) {}\n\n  getProjects(): Observable<DocumentData[]> {\n    const projectRef = collection(this.firestore, 'projects');\n    return collectionData(projectRef,{ idField: \"id\"});\n  }\n\n  addProject(project: Project) {\n    const projectRef = collection(this.firestore, 'projects');\n    return addDoc(projectRef,project)\n   \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Raport } from '../interfaces/Raport.interface';\nimport { addDoc, collection, collectionData, doc, DocumentData, Firestore, updateDoc } from '@angular/fire/firestore';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n@Injectable({\n  providedIn: 'root',\n})\nexport class RaportService {\n  constructor(private http: HttpClient, private firestore: Firestore) {}\n\n  getRaports(): Observable<DocumentData[]> {\n    const raportsRef =collection(this.firestore, 'raports');\n    return collectionData(raportsRef, { idField: \"id\"})\n  }\n\n  addRaport(raport: Raport){\n   const raportRef = collection(this.firestore,'raports');\n   return addDoc(raportRef,raport)\n  }\n\n  updateRaport(raport:Raport){\n  const raportDocRef = doc(this.firestore, `raports/${raport.id}`);\n  return updateDoc(raportDocRef, {bill: true})\n\n  }\n  reloadPage() {\n    window.location.reload();\n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Request} from '../interfaces/Request.interface';\nimport { addDoc, collection, collectionData, deleteDoc, doc, DocumentData, Firestore } from '@angular/fire/firestore';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestService {\n  constructor(private http: HttpClient, private firestore: Firestore) { }\n\n  getRequests(): Observable<DocumentData[]> {\n    const requestRef = collection(this.firestore,'requests');\n    return collectionData(requestRef, { idField: \"id\" })\n\n  }\n\n  deleteRequest(request: Request){\n    const requestDocRef = doc(this.firestore, `requests/${request.id}`);\n    return deleteDoc(requestDocRef)\n  }\n\n  addRequest(request: Request){\n    const requestRef = collection(this.firestore,'requests');\n    return addDoc(requestRef, request)\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n    private showAddMaterial: boolean = false;\n    private subject = new Subject<any>();\n\n  constructor() { }\n\n  toggleAddMaterial(): void {\n    this.showAddMaterial = !this.showAddMaterial;\n    this.subject.next(this.showAddMaterial);\n  }\n\n  onToggle(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  firebase: {\n    apiKey: \"AIzaSyBtgaca-zauJT5E9PuA9Fd2I72DpmKYumY\",\n    authDomain: \"business-plan-9365e.firebaseapp.com\",\n    databaseURL: \"https://business-plan-9365e-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"business-plan-9365e\",\n    storageBucket: \"business-plan-9365e.appspot.com\",\n    messagingSenderId: \"151171892040\",\n    appId: \"1:151171892040:web:c2c092811c72becdeba97d\",\n    measurementId: \"G-DNJ2KVEMRJ\"\n  },\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}